import{_ as s,c as i,o as a,al as n}from"./chunks/framework.C3lzbqcq.js";const c=JSON.parse('{"title":"ref","description":"","frontmatter":{},"headers":[],"relativePath":"reactive/ref/index.md","filePath":"reactive/ref/index.md"}'),l={name:"reactive/ref/index.md"},t=n(`<h1 id="ref" tabindex="-1">ref <a class="header-anchor" href="#ref" aria-label="Permalink to &quot;ref&quot;">​</a></h1><p>源码地址</p><blockquote><p>core/packages/reactivity/src/ref.ts</p></blockquote><h2 id="变量定义约定" tabindex="-1">变量定义约定 <a class="header-anchor" href="#变量定义约定" aria-label="Permalink to &quot;变量定义约定&quot;">​</a></h2><ul><li><code>reactiveMap</code>： 响应式数据缓存 WeakMap 类型</li><li><code>taregt</code>: 原始对象</li><li><code>proxy</code>: 代理对象</li><li><code>handler</code>: new Proxy() 对象时传入的 handler</li></ul><h2 id="创建ref" tabindex="-1">创建ref <a class="header-anchor" href="#创建ref" aria-label="Permalink to &quot;创建ref&quot;">​</a></h2><p>通过 <code>ref</code> 创建一个对象，最终会返回一个 <code>class RefImpl</code> 的实例化对象</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-jQ-F3" id="tab-5j4v7G5" checked><label for="tab-5j4v7G5">demo.vue</label><input type="radio" name="group-jQ-F3" id="tab-XHEj3sS"><label for="tab-XHEj3sS">ref.ts</label></div><div class="blocks"><div class="language-vue vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#F286C4;--shiki-light:#E53935;">template</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> &lt;/</span><span style="--shiki-dark:#F286C4;--shiki-light:#E53935;">template</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#F286C4;--shiki-light:#E53935;">script</span><span style="--shiki-dark:#62E884;--shiki-light:#9C3EDA;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> setup</span><span style="--shiki-dark:#62E884;--shiki-light:#9C3EDA;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> lang</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;">&quot;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#91B859;">ts</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;">&quot;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  import</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ref</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> }</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> form </span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;">&#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#91B859;">vue</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;">&#39;</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">  const obj = ref(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">    name</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">: &#39;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">vue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">&#39;</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">&lt;/script&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">export</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> function</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> ref</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">?:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> unknown</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  return</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> createRef</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;"> false</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">function</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> createRef</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">rawValue</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> unknown</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> shallow</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  // 如果当前值已经是一个 ref 对象，直接返回</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isRef</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">rawValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> rawValue</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  return</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-weight:bold;--shiki-light-font-weight:inherit;"> new</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> RefImpl</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">rawValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> shallow</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div></div><h2 id="实例化refimpl" tabindex="-1">实例化RefImpl <a class="header-anchor" href="#实例化refimpl" aria-label="Permalink to &quot;实例化RefImpl&quot;">​</a></h2><p>实例化 <code>RefImpl</code> 的过程中，通过 <code>toReactive</code> 创建响应式数据并赋值给私有属性 <code>_value</code>，并且通过暴露 <code>get value()</code> 属性来访问 <code>_value</code>，最终达到如下效果</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> obj </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> ref</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> name</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#91B859;">vue</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;">&#39;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> }</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">console</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">log</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">(obj</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value) </span><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">// { name: &#39;vue&#39; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-7vHTY" id="tab-1e8HUgn" checked><label for="tab-1e8HUgn">RefImpl</label><input type="radio" name="group-7vHTY" id="tab-c6anVvx"><label for="tab-c6anVvx">reactive.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> RefImpl</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#FFB86C;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">T</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  private</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> _value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> T</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  private</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> _rawValue</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> T</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  public</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> dep</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">?:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> Dep</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;"> undefined</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  // 标记当前变量为ref响应式数据</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  public</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> readonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> __v_isRef</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;"> true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  constructor</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">    value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> T</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    /** shallowRef创建响应式数据时使用 */</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    public</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> readonly</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> __v_isShallow</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  )</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // _rawValue：vue创建的 Proxy 对象的原始对象数据</span></span>
<span class="line highlighted"><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">    this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">_rawValue</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> __v_isShallow</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> :</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> toRaw</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">// reactive.toRaw</span></span>
<span class="line highlighted"><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">    this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">_value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> __v_isShallow</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> :</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> toReactive</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">// reactive.toReactive</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  get</span><span style="--shiki-dark:#62E884;--shiki-light:#E53935;"> value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">()</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">    trackRefValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">_value</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  set</span><span style="--shiki-dark:#62E884;--shiki-light:#E53935;"> value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">newVal</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // useDirectValue： true-shallowRef数据，false-ref数据</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> useDirectValue</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span></span>
<span class="line"><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">      this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">__v_isShallow</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ||</span><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> // shallowRef标识</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      isShallow</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">newVal</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">||</span><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> // shallowRef判断</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      isReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">newVal</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">//  只读数据标识</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // 如果是shallowRef创建的数据则直接赋值，反之使用toRaw解除代理，返回原始对象</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // toRaw() https://cn.vuejs.org/api/reactivity-advanced.html#toraw</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">    newVal</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> useDirectValue</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> newVal</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> :</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> toRaw</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">newVal</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // 判断数据是否发生变更</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">hasChanged</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">newVal</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">_rawValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // shallowRef数据直接赋值</span></span>
<span class="line"><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">      this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">_rawValue</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> newVal</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // ref数据通过 toReactive 将内部数据使用proxy代理</span></span>
<span class="line"><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">      this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">_value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> useDirectValue</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> newVal</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> :</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> toReactive</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">newVal</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 触发依赖</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // TODO 有哪些依赖类型要触发，dom、computed、effect... ?</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      triggerRefValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> DirtyLevels</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">Dirty</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> newVal</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">import</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> mutableHandlers</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> from</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#91B859;">./baseHandlers</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;">&#39;</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">import</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> mutableCollectionHandlers</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> from</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#91B859;">./collectionHandlers</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">export</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> reactiveMap </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-weight:bold;--shiki-light-font-weight:inherit;"> new</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> WeakMap</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#FFB86C;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">Target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> any</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">export</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> const</span><span style="--shiki-dark:#62E884;--shiki-light:#90A4AE;"> toReactive</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> &lt;</span><span style="--shiki-dark:#FFB86C;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">T</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> extends</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> unknown</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> T</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> T</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> =&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  // isObject(value) ? reactive(value) : value // 原代码</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  /** 创建响应式数据时，如果是对象，则用reactive处理，基本类型直接返回 */</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isObject</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> reactive</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> value</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">export</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> function</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> reactive</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  // if trying to observe a readonly proxy, return the readonly version.</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  // 判断是否为只读对象</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> target</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  return</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> createReactiveObject</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">    target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> </span></span>
<span class="line"><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;">    false</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line highlighted"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">    mutableHandlers</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line highlighted"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">    mutableCollectionHandlers</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">    reactiveMap</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">  )</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div></div></div><h2 id="创建响应式对象" tabindex="-1">创建响应式对象 <a class="header-anchor" href="#创建响应式对象" aria-label="Permalink to &quot;创建响应式对象&quot;">​</a></h2><p><code>createReactiveObject</code> 使用 <code>Proxy</code> 代理 <code>target</code> 原始对象，并将代理对象缓存到全局 <code>reactiveMap</code> 中。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>proxyMap</code> 即 <code>reactiveMap</code></p><p>注意：<code>proxyMap.set(target, proxy)</code> 中的 <code>target</code> 是<code>地址值</code>，并不是其对象本身，所以变更 <code>target</code> 属性并不会改变 proxyMap 中对应的 key。</p></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-uQKMb" id="tab-BJpT8WX" checked><label for="tab-BJpT8WX">createReactiveObject</label><input type="radio" name="group-uQKMb" id="tab-dLBJe2A"><label for="tab-dLBJe2A">handlers</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">function</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> createReactiveObject</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">  target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> Target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">  isReadonly</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">  baseHandlers</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> ProxyHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">any</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;,</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">  collectionHandlers</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> ProxyHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">any</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;,</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">  proxyMap</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> WeakMap</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#FFB86C;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">Target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> any</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isObject</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">__DEV__</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      warn</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#E7EE98;--shiki-light:#39ADB5;">\`</span><span style="--shiki-dark:#E7EE98;--shiki-light:#91B859;">value cannot be made reactive: </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">\${</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">String</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">(target)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">}</span><span style="--shiki-dark:#E7EE98;--shiki-light:#39ADB5;">\`</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> target</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  // target 如果已经是一个 Proxy 对象， 则直接返回</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  // ReactiveFlags.RAW = &#39;__v_raw&#39;</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  // ReactiveFlags.IS_REACTIVE = &#39;__v_isReactive&#39;</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">    target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">[</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">ReactiveFlags</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">RAW</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">] </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">&amp;&amp;</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">    !</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isReadonly</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> &amp;&amp;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">[</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">ReactiveFlags</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">IS_REACTIVE</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">])</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">  ) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> target</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  // 判断 reactiveMap 中是否存在 target 对应的 Proxy 对象，有则直接返回存在的Proxy对象</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> existingProxy</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> proxyMap</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">get</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">existingProxy</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> existingProxy</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  // 仅特定类型的值可以观察。</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> targetType</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> getTargetType</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">targetType</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> TargetType</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">INVALID</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> target</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  // Object Array 类型使用 baseHandlers</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  // Map Set WeakMap WeakSet 类型使用 collectionHandlers</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> proxy</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-weight:bold;--shiki-light-font-weight:inherit;"> new</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> Proxy</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">    target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">    targetType</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> TargetType</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">COLLECTION</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> collectionHandlers</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> baseHandlers</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">  )</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  // 将响应式对象存入全局缓存中</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">  proxyMap</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">set</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> proxy</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> proxy</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">export</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> mutableHandlers</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> ProxyHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> /*#__PURE__*/</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-weight:bold;--shiki-light-font-weight:inherit;"> new</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> MutableReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">export</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> mutableCollectionHandlers</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> ProxyHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#FFB86C;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">CollectionTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">  get</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> /*#__PURE__*/</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> createInstrumentationGetter</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;">false</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;"> false</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div><h3 id="mutablehandlers" tabindex="-1">mutableHandlers <a class="header-anchor" href="#mutablehandlers" aria-label="Permalink to &quot;mutableHandlers&quot;">​</a></h3><blockquote><p>Object Array 类型数据创建 <code>Proxy</code> 代理对象时使用 <code>mutableHandlers</code> 作为 <code>handler</code>，下文会将 <code>mutableHandlers</code> 的所有属性分开讲解</p></blockquote><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">export</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> mutableHandlers</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> ProxyHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> /*#__PURE__*/</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-weight:bold;--shiki-light-font-weight:inherit;"> new</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> MutableReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-DT5z3" id="tab-TtH5zNO" checked><label for="tab-TtH5zNO">MutableReactiveHandler</label><input type="radio" name="group-DT5z3" id="tab-Gf7QXBe"><label for="tab-Gf7QXBe">get</label><input type="radio" name="group-DT5z3" id="tab-O3laMIK"><label for="tab-O3laMIK">set</label><input type="radio" name="group-DT5z3" id="tab-Mn26aGG"><label for="tab-Mn26aGG">deleteProperty</label><input type="radio" name="group-DT5z3" id="tab-ehAH9AL"><label for="tab-ehAH9AL">has</label><input type="radio" name="group-DT5z3" id="tab-LeSt104"><label for="tab-LeSt104">ownKeys</label><input type="radio" name="group-DT5z3" id="tab-FaDGpzI"><label for="tab-FaDGpzI">collectionHandlers</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> MutableReactiveHandler</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> extends</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> BaseReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  constructor</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">isShallow</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;"> false</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">    super</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;">false</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isShallow</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  /** target: 原始对象，key: target的key，receiver: Proxy代理对象或者继承Proxy的对象 */</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  set</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> unknown</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> receiver</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">;</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  deleteProperty</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">;</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  has</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">;</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  ownKeys</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> (</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">)[]</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">;</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> BaseReactiveHandler</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> implements</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> ProxyHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#FFB86C;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">Target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  constructor</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    protected</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> readonly</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> _isReadonly</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;"> false</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    protected</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> readonly</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> _isShallow</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;"> false</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  )</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {}</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  get</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> Target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> receiver</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">);</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> MutableReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  get</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> Target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> receiver</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // 使用ref创建对象时，_isReadonly=false, isShallow=false</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isReadonly</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">_isReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">      isShallow</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">_isShallow</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ReactiveFlags</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">IS_REACTIVE</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // key === &#39;__v_isReactive&#39; 判断该数据是否为 响应式数据，因为 isReadonly与__v_isReactive属性值肯定是相反的</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> !</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isReadonly</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ReactiveFlags</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">IS_READONLY</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">       // key === &#39;__v_isReadonly&#39; 返回当前 isReadonly 属性</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isReadonly</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ReactiveFlags</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">IS_SHALLOW</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // key === &#39;__v_isShallow&#39; 返回当前 isShallow 属性</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isShallow</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ReactiveFlags</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">RAW</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // key === &#39;__v_raw&#39;</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 通过响应式对象类型从对应缓存 Map 中取出 target 对象的 Proxy 对象</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // ref创建的对象缓存在 reactiveMap 中</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">        receiver</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">          (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isReadonly</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">            ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isShallow</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">              ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> shallowReadonlyMap</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">              :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> readonlyMap</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">            :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isShallow</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">              ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> shallowReactiveMap</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">              :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> reactiveMap</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">          )</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">get</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">||</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        // receiver is not the reactive proxy, but has the same prototype</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        // this means the reciever is a user proxy of the reactive proxy</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        // 判断 receiver 对象是否为 target 的 代理对象</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">        Object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">getPrototypeOf</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">getPrototypeOf</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">receiver</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">      ) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> target</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // early return undefined</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> targetIsArray</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> isArray</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 如果对象是一个数组且 key 是数组特定的方法或属性，则直接从 arrayInstrumentations 中获取该方法或属性。</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">targetIsArray</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> &amp;&amp;</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> hasOwn</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">arrayInstrumentations</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Reflect</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">get</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">arrayInstrumentations</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> receiver</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 如果 key 是 &#39;hasOwnProperty&#39;，则返回 hasOwnProperty 函数。</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#91B859;">hasOwnProperty</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;">&#39;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> hasOwnProperty</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // 使用 Reflect.get 获取 target 的 key 属性值。</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> res</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Reflect</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">get</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> receiver</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // 如果 key 是内置的符号或不可追踪的键（例如一些特殊的、不应触发依赖收集的键），则直接返回属性值。</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isSymbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> builtInSymbols</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">has</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> isNonTrackableKeys</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> res</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // 如果不是只读数据，则进行依赖收集</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 依赖收集</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      track</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> TrackOpTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">GET</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // 如果对象是浅层响应式，则直接返回值</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isShallow</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> res</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isRef</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">res</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // ref unwrapping - skip unwrap for Array + integer key.</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 如果返回的值是一个 ref 对象（这在 Vue 的 Composition API 中常见），</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 并且它不是数组索引（即不是用于数组的整数键），则解包并返回其值。</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> targetIsArray</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> &amp;&amp;</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> isIntegerKey</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> res</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> res</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isObject</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">res</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // Convert returned value into a proxy as well. we do the isObject check</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // here to avoid invalid value warning. Also need to lazy access readonly</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // and reactive here to avoid circular dependency.</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 如果返回的值是一个对象，则递归地将其转换为响应式或只读代理（取决于当前对象是否只读）</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isReadonly</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ?</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> readonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">res</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> reactive</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">res</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> res</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> MutableReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  set</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">    target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">    key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">    value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> unknown</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">    receiver</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  )</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    let</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> oldValue</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> as</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> any</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)[</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">]</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">_isShallow</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">      const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isOldValueReadonly</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> isReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isShallow</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">&amp;&amp;</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> !</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">        oldValue</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> toRaw</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">        value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> toRaw</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isArray</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">&amp;&amp;</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> isRef</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">&amp;&amp;</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> !</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isRef</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isOldValueReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">          return</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;"> false</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">        }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">          oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> value</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">          return</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;"> true</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">        }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // in shallow mode, objects are set as-is regardless of reactive or not</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> hadKey</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      isArray</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">&amp;&amp;</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> isIntegerKey</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">        ?</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> Number</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">length</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">        :</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> hasOwn</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> result</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Reflect</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">set</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> receiver</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // don&#39;t trigger if target is something up in the prototype chain of original</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> toRaw</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">receiver</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">hadKey</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">        trigger</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> TriggerOpTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">ADD</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">hasChanged</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">        trigger</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> TriggerOpTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">SET</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> result</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> MutableReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  deleteProperty</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> hadKey</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> hasOwn</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> oldValue</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> as</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> any</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)[</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">]</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> result</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Reflect</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">deleteProperty</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">result</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> &amp;&amp;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> hadKey</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      trigger</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> TriggerOpTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">DELETE</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;"> undefined</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> result</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> MutableReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  has</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> result</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Reflect</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">has</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isSymbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">||</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> !</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">builtInSymbols</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">has</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      track</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> TrackOpTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">HAS</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> result</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> MutableReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  ownKeys</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> (</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">)[] </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">    track</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">      target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">      TrackOpTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">ITERATE</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      isArray</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">?</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#91B859;">length</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;">&#39;</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ITERATE_KEY</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">    )</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Reflect</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">ownKeys</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="collectionhandlers" tabindex="-1">collectionHandlers <a class="header-anchor" href="#collectionhandlers" aria-label="Permalink to &quot;collectionHandlers&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Y7gLL" id="tab-opQ3Bo2" checked><label for="tab-opQ3Bo2">collectionHandlers</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">function</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> createInstrumentationGetter</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">isReadonly</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> shallow</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> instrumentations</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> shallow</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">    ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isReadonly</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">      ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> shallowReadonlyInstrumentations</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">      :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> shallowInstrumentations</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">    :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isReadonly</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">      ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> readonlyInstrumentations</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">      :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> mutableInstrumentations</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">    target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> CollectionTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">    key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">    receiver</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> CollectionTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">  ) </span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">=&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ReactiveFlags</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">IS_REACTIVE</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> !</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isReadonly</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ReactiveFlags</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">IS_READONLY</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isReadonly</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ReactiveFlags</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">RAW</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> target</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Reflect</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">get</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      hasOwn</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">instrumentations</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">&amp;&amp;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> in</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> target</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">        ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> instrumentations</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">        :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">      key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">      receiver</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">    )</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div></div></div></div></div>`,20),h=[t];function k(e,p,r,F,y,d){return a(),i("div",null,h)}const A=s(l,[["render",k]]);export{c as __pageData,A as default};
