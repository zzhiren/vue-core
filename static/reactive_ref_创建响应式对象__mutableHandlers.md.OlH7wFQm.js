import{_ as s,c as i,o as a,al as n}from"./chunks/framework.C3lzbqcq.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"reactive/ref/创建响应式对象/_mutableHandlers.md","filePath":"reactive/ref/创建响应式对象/_mutableHandlers.md"}'),l={name:"reactive/ref/创建响应式对象/_mutableHandlers.md"},t=n(`<h3 id="mutablehandlers" tabindex="-1">mutableHandlers <a class="header-anchor" href="#mutablehandlers" aria-label="Permalink to &quot;mutableHandlers&quot;">​</a></h3><blockquote><p>Object Array 类型数据创建 <code>Proxy</code> 代理对象时使用 <code>mutableHandlers</code> 作为 <code>handler</code>，下文会将 <code>mutableHandlers</code> 的所有属性分开讲解</p></blockquote><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">export</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> mutableHandlers</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> ProxyHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> /*#__PURE__*/</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-weight:bold;--shiki-light-font-weight:inherit;"> new</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> MutableReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-eQOvU" id="tab-wyY_nWR" checked><label for="tab-wyY_nWR">MutableReactiveHandler</label><input type="radio" name="group-eQOvU" id="tab-9wc9DKa"><label for="tab-9wc9DKa">get</label><input type="radio" name="group-eQOvU" id="tab-GPlmGBz"><label for="tab-GPlmGBz">set</label><input type="radio" name="group-eQOvU" id="tab-MUMt6wG"><label for="tab-MUMt6wG">deleteProperty</label><input type="radio" name="group-eQOvU" id="tab-g-C7agA"><label for="tab-g-C7agA">has</label><input type="radio" name="group-eQOvU" id="tab-jnYHiiZ"><label for="tab-jnYHiiZ">ownKeys</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> MutableReactiveHandler</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> extends</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> BaseReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  constructor</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">isShallow</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;"> false</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">    super</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;">false</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isShallow</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">  /** target: 原始对象，key: target的key，receiver: Proxy代理对象或者继承Proxy的对象 */</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  set</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> unknown</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> receiver</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">;</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  deleteProperty</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">;</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  has</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">;</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  ownKeys</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> (</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">)[]</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">;</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> BaseReactiveHandler</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> implements</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> ProxyHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#FFB86C;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">Target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">  constructor</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    protected</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> readonly</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> _isReadonly</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;"> false</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    protected</span><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;"> readonly</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> _isShallow</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;"> false</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  )</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {}</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  get</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> Target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> receiver</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">);</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> MutableReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  get</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> Target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> receiver</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // 使用ref创建对象时，_isReadonly=false, isShallow=false</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isReadonly</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">_isReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">      isShallow</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">_isShallow</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ReactiveFlags</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">IS_REACTIVE</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // key === &#39;__v_isReactive&#39; 判断该数据是否为 响应式数据，因为 isReadonly与__v_isReactive属性值肯定是相反的</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> !</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isReadonly</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ReactiveFlags</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">IS_READONLY</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">       // key === &#39;__v_isReadonly&#39; 返回当前 isReadonly 属性</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isReadonly</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ReactiveFlags</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">IS_SHALLOW</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // key === &#39;__v_isShallow&#39; 返回当前 isShallow 属性</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isShallow</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ReactiveFlags</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">RAW</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // key === &#39;__v_raw&#39;</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 通过响应式对象类型从对应缓存 Map 中取出 target 对象的 Proxy 对象</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // ref创建的对象缓存在 reactiveMap 中</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">        receiver</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">          (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isReadonly</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">            ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isShallow</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">              ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> shallowReadonlyMap</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">              :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> readonlyMap</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">            :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isShallow</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">              ?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> shallowReactiveMap</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">              :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> reactiveMap</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">          )</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">get</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">||</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        // receiver is not the reactive proxy, but has the same prototype</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        // this means the reciever is a user proxy of the reactive proxy</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        // 判断 receiver 对象是否为 target 的 代理对象</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">        Object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">getPrototypeOf</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">===</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">getPrototypeOf</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">receiver</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">      ) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> target</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // early return undefined</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> targetIsArray</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> isArray</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 如果对象是一个数组且 key 是数组特定的方法或属性，则直接从 arrayInstrumentations 中获取该方法或属性。</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">targetIsArray</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> &amp;&amp;</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> hasOwn</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">arrayInstrumentations</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Reflect</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">get</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">arrayInstrumentations</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> receiver</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 如果 key 是 &#39;hasOwnProperty&#39;，则返回 hasOwnProperty 函数。</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#91B859;">hasOwnProperty</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;">&#39;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> hasOwnProperty</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // 使用 Reflect.get 获取 target 的 key 属性值。</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> res</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Reflect</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">get</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> receiver</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // 如果 key 是内置的符号或不可追踪的键（例如一些特殊的、不应触发依赖收集的键），则直接返回属性值。</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isSymbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> builtInSymbols</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">has</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> isNonTrackableKeys</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> res</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // 如果不是只读数据，则进行依赖收集</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 依赖收集</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      track</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> TrackOpTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">GET</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // 如果对象是浅层响应式，则直接返回值</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isShallow</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> res</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isRef</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">res</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // ref unwrapping - skip unwrap for Array + integer key.</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 如果返回的值是一个 ref 对象（这在 Vue 的 Composition API 中常见），</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 并且它不是数组索引（即不是用于数组的整数键），则解包并返回其值。</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> targetIsArray</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> &amp;&amp;</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> isIntegerKey</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">?</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> res</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> res</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isObject</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">res</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // Convert returned value into a proxy as well. we do the isObject check</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // here to avoid invalid value warning. Also need to lazy access readonly</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // and reactive here to avoid circular dependency.</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // 如果返回的值是一个对象，则递归地将其转换为响应式或只读代理（取决于当前对象是否只读）</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isReadonly</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ?</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> readonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">res</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> reactive</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">res</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> res</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> MutableReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  set</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">    target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">    key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">    value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> unknown</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">    receiver</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  )</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    let</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> oldValue</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> as</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> any</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)[</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">]</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">this</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">_isShallow</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">      const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> isOldValueReadonly</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> isReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isShallow</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">&amp;&amp;</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> !</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">        oldValue</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> toRaw</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">        value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> toRaw</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isArray</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">&amp;&amp;</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> isRef</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">&amp;&amp;</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> !</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isRef</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">        if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">isOldValueReadonly</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">          return</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;"> false</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">        }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">          oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> value</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">          return</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#FF5370;"> true</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">        }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      // in shallow mode, objects are set as-is regardless of reactive or not</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> hadKey</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      isArray</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">&amp;&amp;</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> isIntegerKey</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">        ?</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> Number</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">&lt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">length</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">        :</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> hasOwn</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> result</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Reflect</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">set</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> receiver</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#90A4AE;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    // don&#39;t trigger if target is something up in the prototype chain of original</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> ===</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> toRaw</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">receiver</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">      if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">hadKey</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">        trigger</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> TriggerOpTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">ADD</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> else</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">hasChanged</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">        trigger</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> TriggerOpTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">SET</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> value</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">      }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> result</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> MutableReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  deleteProperty</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> hadKey</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;"> hasOwn</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> oldValue</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;"> as</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> any</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)[</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">]</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> result</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Reflect</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">deleteProperty</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">result</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> &amp;&amp;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> hadKey</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      trigger</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> TriggerOpTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">DELETE</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#39ADB5;"> undefined</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> oldValue</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> result</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> MutableReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  has</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;"> key</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> boolean</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">    const</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> result</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Reflect</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">has</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    if</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;"> (</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">!</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">isSymbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">||</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> !</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">builtInSymbols</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">has</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)) </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      track</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> TrackOpTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">HAS</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> key</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">    }</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> result</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#9C3EDA;">class</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;"> MutableReactiveHandler</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;"> {</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#E53935;">  ownKeys</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#90A4AE;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">target</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> object</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> (</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">string</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> |</span><span style="--shiki-dark:#97E1F1;--shiki-light:#E2931D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> symbol</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">)[] </span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">{</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">    track</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">      target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">      TrackOpTypes</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#BF9EEE;--shiki-light:#90A4AE;">ITERATE</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">      isArray</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">) </span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;">?</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#91B859;">length</span><span style="--shiki-dark:#DEE492;--shiki-light:#39ADB5;">&#39;</span><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;"> :</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> ITERATE_KEY</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">    )</span></span>
<span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#39ADB5;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">    return</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;"> Reflect</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">.</span><span style="--shiki-dark:#62E884;--shiki-light:#6182B8;">ownKeys</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">(</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#90A4AE;">target</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#E53935;">)</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div></div>`,4),h=[t];function k(e,p,r,F,y,d){return a(),i("div",null,h)}const c=s(l,[["render",k]]);export{A as __pageData,c as default};
